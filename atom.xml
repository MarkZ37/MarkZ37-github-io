<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mark</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-09-02T02:36:02.484Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>张弛（Mark·Zhang）</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django下取出Delete请求中的参数（避坑向）</title>
    <link href="http://yoursite.com/2021/09/02/Django%E4%B8%8B%E5%8F%96%E5%87%BADelete%E8%AF%B7%E6%B1%82%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0/"/>
    <id>http://yoursite.com/2021/09/02/Django%E4%B8%8B%E5%8F%96%E5%87%BADelete%E8%AF%B7%E6%B1%82%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0/</id>
    <published>2021-09-02T01:08:25.000Z</published>
    <updated>2021-09-02T02:36:02.484Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>在刚刚进入公司的时候，在练手项目中首次接触到了发送delete请求的情况，之前一直在使用的是post和get请求。在我使用的一种Axios设置参数的方法中，在Django后端获取数据时，post，get，put请求都可以直接通过request.getbody获取到数据，但是delete方法却不行，究其原因，是delete请求需要前端单独设置传参方式才可以达到目的。</p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><h2 id="1、前端常规请求方式"><a href="#1、前端常规请求方式" class="headerlink" title="1、前端常规请求方式"></a>1、前端常规请求方式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">post</span>(<span class="params">url, params</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//url是接口url，params是数据，在前端可以直接传键值对数组</span></span><br><span class="line">  <span class="keyword">return</span> axios.post(url, params); <span class="comment">//如果不需要转json的话，那么第二个参数就是params</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、Delete请求方式"><a href="#2、Delete请求方式" class="headerlink" title="2、Delete请求方式"></a>2、Delete请求方式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Delete方法的方法名最好别用delete，delete是js中的关键字</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">axiosDelete</span>(<span class="params">url, params</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//与上述不同，params需要改为&#123;data: params&#125;</span></span><br><span class="line">  <span class="keyword">return</span> axios.delete(url, &#123;<span class="attr">data</span>: params&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、后端解析"><a href="#3、后端解析" class="headerlink" title="3、后端解析"></a>3、后端解析</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//若没有上述改进，request.body获取不到数据</span><br><span class="line">json.loads(request.body.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>OK，上述内容为个人经验得出，若有不对，多多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;在刚刚进入公司的时候，在练手项目中首次接触到了发送delete请求的情况，之前一直在使用的是post和get请求。在我使用的</summary>
      
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
    <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
    <category term="Http" scheme="http://yoursite.com/tags/Http/"/>
    
  </entry>
  
  <entry>
    <title>Django+Ajax中CSRF中间件造成请求403错误的种种</title>
    <link href="http://yoursite.com/2021/08/27/Django-Ajax%E4%B8%ADCSRF%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%80%A0%E6%88%90%E8%AF%B7%E6%B1%82403%E9%94%99%E8%AF%AF%E7%9A%84%E7%A7%8D%E7%A7%8D/"/>
    <id>http://yoursite.com/2021/08/27/Django-Ajax%E4%B8%ADCSRF%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%80%A0%E6%88%90%E8%AF%B7%E6%B1%82403%E9%94%99%E8%AF%AF%E7%9A%84%E7%A7%8D%E7%A7%8D/</id>
    <published>2021-08-27T07:56:12.000Z</published>
    <updated>2021-08-27T08:37:48.128Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>上一篇博文中，聊到了在Django的中间件配置中有一个名为 ‘django.middleware.csrf.CsrfViewMiddleware’ 的中间件，会造成前端请求时候会造成403（Forbidden）错误，在此需要将此中间件注册的代码先注释掉，可以解决403的问题，然而我们是否需要进行此操作，是否需要注释掉此中间件，以下便进行简单的解释。</p><h1 id="1、关于CSRF策略"><a href="#1、关于CSRF策略" class="headerlink" title="1、关于CSRF策略"></a>1、关于CSRF策略</h1><p>CSRF（Cross-site request forgery）跨站请求伪造，在具体例子上面我们可以理解为：当一个人获取到一个请求的具体接口和参数信息，如：’ip:8080/getSomething?username=someone’ 这样的接口，意为将账号为someone的用户的something提出，如个人积分或者仓库物品等等，当个人的账号被别人获取时，并且利用该接口，可以造成跳过密码登陆的非本人操作的攻击，由此CSRF策略是利用某种加密协议生成token，植入到登陆用户的浏览器session/cookie中，通过前后端约定token来实现身份的验证。</p><h1 id="2、是否可以注释该中间件"><a href="#2、是否可以注释该中间件" class="headerlink" title="2、是否可以注释该中间件"></a>2、是否可以注释该中间件</h1><p>该中间件在请求到达时进行预处理，进行token的验证，然而此策略是较为合理的，但是具体情况我们需要具体分析，目前刚刚参加工作，在参与的项目中我们并没有使用CSRF策略，而是以JWT生成的token作为身份验证的策略，根据之前的学习以及理解，JWT生成的token加密程度高，并且JWT的加密元数据可以自定义，也可以根据JWT的工具包方法解析出加密时的元数据，比如用户名、密码之类的，在后端验证时也可以较为方便的进行用户的数据操作。</p><p>总的意思既是用JWT来代替CSRF来进行验证，在此特殊说明。</p><p>OK，以上内容均为个人理解所得，若有问题，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;上一篇博文中，聊到了在Django的中间件配置中有一个名为 ‘django.middleware.csrf.CsrfView</summary>
      
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
    <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
    <category term="CSRF" scheme="http://yoursite.com/tags/CSRF/"/>
    
    <category term="Ajax" scheme="http://yoursite.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>Django解决跨域问题</title>
    <link href="http://yoursite.com/2021/08/27/Django%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2021/08/27/Django%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</id>
    <published>2021-08-27T07:12:24.000Z</published>
    <updated>2021-08-27T08:38:11.827Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>跨域问题在之前的博文中描述了Java的SpringBoot框架下的解决方法，这次则描述一下关于Python的Django框架下的解决方法，核心内容大同小异，只是留下一个记录，以便复制粘贴（Doge）。</p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><h2 id="1、首先需要下载一个叫做-django-cors-header的app，在terminal执行此语句"><a href="#1、首先需要下载一个叫做-django-cors-header的app，在terminal执行此语句" class="headerlink" title="1、首先需要下载一个叫做 django-cors-header的app，在terminal执行此语句:"></a>1、首先需要下载一个叫做 django-cors-header的app，在terminal执行此语句:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-cors-header</span><br></pre></td></tr></table></figure><h2 id="2、将corsheaders引入到INSTALLED-APPS中"><a href="#2、将corsheaders引入到INSTALLED-APPS中" class="headerlink" title="2、将corsheaders引入到INSTALLED_APPS中:"></a>2、将corsheaders引入到INSTALLED_APPS中:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...,</span><br><span class="line">    <span class="string">&#x27;corsheaders&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="3、引入下述的两个中间件到中间件注册中："><a href="#3、引入下述的两个中间件到中间件注册中：" class="headerlink" title="3、引入下述的两个中间件到中间件注册中："></a>3、引入下述的两个中间件到中间件注册中：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    ...,</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="4、添加下述配置到settings-py中："><a href="#4、添加下述配置到settings-py中：" class="headerlink" title="4、添加下述配置到settings.py中："></a>4、添加下述配置到settings.py中：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br><span class="line">CORS_ALLOW_METHODS = (</span><br><span class="line">    <span class="string">&#x27;DELETE&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;OPTIONS&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PATCH&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;VIEW&#x27;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_HEADERS = (</span><br><span class="line">    <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;X_FILENAME&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;accept-encoding&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;authorization&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;content-type&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;dnt&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;origin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;x-csrftoken&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;x-requested-with&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Pragma&#x27;</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>此时跨域问题已经解决了，正常情况下前端已经能与后端交互，但是在此有一个中间件</p><p> ‘django.middleware.csrf.CsrfViewMiddleware’</p><p> 会造成CSRF方面的错误，403禁止访问，此时将此中间件注释掉可以使通讯变得正常，具体关于CSRF的内容后续如果学会了，会出相关解释。</p><p> OK，以上内容由个人总结得出，如有不足，虚心接受指导~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;跨域问题在之前的博文中描述了Java的SpringBoot框架下的解决方法，这次则描述一下关于Python的Django框架</summary>
      
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
    <category term="Django" scheme="http://yoursite.com/tags/Django/"/>
    
    <category term="CORS" scheme="http://yoursite.com/tags/CORS/"/>
    
  </entry>
  
  <entry>
    <title>关于vue-quill-editor的一些使用心得</title>
    <link href="http://yoursite.com/2021/04/30/%E5%85%B3%E4%BA%8Evue-quill-editor%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>http://yoursite.com/2021/04/30/%E5%85%B3%E4%BA%8Evue-quill-editor%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</id>
    <published>2021-04-30T13:28:42.000Z</published>
    <updated>2021-05-01T10:06:19.195Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>在开发博客项目时，vue前端需要使用到vue-quill-editor这个富文本编辑器，本文主要实现其中的关于富文本中插入的图片能及时上传到阿里云OSS对象存储中，获取图片的url并插入到正文之中，方便之后图片的加载。</p><p>通过阅读这一篇博客，甚至还可以举一反三，实现视频等元素的插入上传。</p><h1 id="安装vue-quill-editor"><a href="#安装vue-quill-editor" class="headerlink" title="安装vue-quill-editor"></a>安装vue-quill-editor</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-quill-editor --save</span><br></pre></td></tr></table></figure><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><p>ps:该操作需要用到element-UI中的el-upload工具，具体安装配置element-UI可以自行百度</p><h2 id="1、html"><a href="#1、html" class="headerlink" title="1、html"></a>1、html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;deploy-con&quot;</span>&gt;</span></span><br><span class="line">        &lt;el-upload</span><br><span class="line">        class=&quot;avatar-uploader quill-img&quot;</span><br><span class="line">        :action=&quot;uploadImgUrl&quot;</span><br><span class="line">        name=&quot;file&quot;</span><br><span class="line">        :headers=&quot;myHeaders&quot;</span><br><span class="line">        :show-file-list=&quot;false&quot;</span><br><span class="line">        :on-success=&quot;quillImgSuccess&quot;</span><br><span class="line">        :on-error=&quot;uploadError&quot;</span><br><span class="line">        :before-upload=&quot;quillImgBefore&quot;</span><br><span class="line">        accept=&#x27;.jpg,.jpeg,.png,.gif&#x27;&gt;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-upload</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">quill-editor</span> <span class="attr">v-model</span>=<span class="string">&quot;content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">ref</span>=<span class="string">&quot;quillEditor&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:options</span>=<span class="string">&quot;editorOption&quot;</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">blur</span>=<span class="string">&quot;handleEditorBlur($event)&quot;</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">focus</span>=<span class="string">&quot;handleEditorFocus($event)&quot;</span></span></span><br><span class="line"><span class="tag">          @<span class="attr">change</span>=<span class="string">&quot;handleEditorChange($event)&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;height: 800px;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">quill-editor</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>具体参数可以到官方文档查询，或者看之后的思路详情也可以了解一部分参数配置。</p><h2 id="2、js代码"><a href="#2、js代码" class="headerlink" title="2、js代码"></a>2、js代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;@/store&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> token = store.state.token.token;</span><br><span class="line"><span class="keyword">const</span> toolbarOptions = [</span><br><span class="line">[<span class="string">&quot;bold&quot;</span>, <span class="string">&quot;italic&quot;</span>, <span class="string">&quot;underline&quot;</span>, <span class="string">&quot;strike&quot;</span>],       <span class="comment">// 加粗 斜体 下划线 删除线</span></span><br><span class="line">[<span class="string">&quot;blockquote&quot;</span>, <span class="string">&quot;code-block&quot;</span>],                    <span class="comment">// 引用  代码块</span></span><br><span class="line">[&#123; <span class="attr">list</span>: <span class="string">&quot;ordered&quot;</span> &#125;, &#123; <span class="attr">list</span>: <span class="string">&quot;bullet&quot;</span> &#125;],       <span class="comment">// 有序、无序列表</span></span><br><span class="line">[&#123; <span class="attr">indent</span>: <span class="string">&quot;-1&quot;</span> &#125;, &#123; <span class="attr">indent</span>: <span class="string">&quot;+1&quot;</span> &#125;],            <span class="comment">// 缩进</span></span><br><span class="line">[&#123; <span class="attr">size</span>: [<span class="string">&quot;small&quot;</span>, <span class="literal">false</span>, <span class="string">&quot;large&quot;</span>, <span class="string">&quot;huge&quot;</span>] &#125;],   <span class="comment">// 字体大小</span></span><br><span class="line">[&#123; <span class="attr">header</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="literal">false</span>] &#125;],         <span class="comment">// 标题</span></span><br><span class="line">[&#123; <span class="attr">color</span>: [] &#125;, &#123; <span class="attr">background</span>: [] &#125;],             <span class="comment">// 字体颜色、字体背景颜色</span></span><br><span class="line">[&#123; <span class="attr">align</span>: [] &#125;],                                 <span class="comment">// 对齐方式</span></span><br><span class="line">[<span class="string">&quot;clean&quot;</span>],                                       <span class="comment">// 清除文本格式</span></span><br><span class="line">[<span class="string">&quot;link&quot;</span>, <span class="string">&quot;image&quot;</span>, <span class="string">&quot;video&quot;</span>]                       <span class="comment">// 链接、图片、视频</span></span><br><span class="line">];</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">name: <span class="string">&#x27;My&#x27;</span>,</span><br><span class="line">props: &#123;</span><br><span class="line">  <span class="comment">/* 编辑器的内容 */</span></span><br><span class="line">  value: &#123;</span><br><span class="line">    type: <span class="built_in">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/* 图片大小 */</span></span><br><span class="line">  maxSize: &#123;</span><br><span class="line">    type: <span class="built_in">Number</span>,</span><br><span class="line">    <span class="keyword">default</span>: <span class="number">4000</span> <span class="comment">//kb</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span>&#123;</span><br><span class="line"></span><br><span class="line">    content: <span class="built_in">this</span>.value,</span><br><span class="line">    uploadImgUrl: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    editorOption: &#123;</span><br><span class="line">      placeholder: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      theme: <span class="string">&quot;snow&quot;</span>, <span class="comment">// or &#x27;bubble&#x27;</span></span><br><span class="line">      placeholder: <span class="string">&quot;请输入内容&quot;</span>,</span><br><span class="line">      modules: &#123;</span><br><span class="line">        toolbar: &#123;</span><br><span class="line">          container: toolbarOptions,</span><br><span class="line">          handlers: &#123;</span><br><span class="line">            image: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">if</span> (value) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 触发input框选择图片文件</span></span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">&quot;.quill-img input&quot;</span>).click();</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.quill.format(<span class="string">&quot;image&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    uploadImgUrl: <span class="string">&quot;http://localhost:8080/tool/oss/homeImageUpload&quot;</span>, <span class="comment">// 上传的图片服务器地址</span></span><br><span class="line">    myHeaders: &#123;<span class="attr">Authorization</span>: token&#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">watch: &#123;</span><br><span class="line">  value: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.content = <span class="built_in">this</span>.value;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line"></span><br><span class="line">  handleEditorBlur:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">  &#125;,</span><br><span class="line">  handleEditorFocus:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">  &#125;,</span><br><span class="line">  handleEditorChange:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 富文本图片上传前</span></span><br><span class="line">  <span class="function"><span class="title">quillImgBefore</span>(<span class="params">file</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> fileType = file.type;</span><br><span class="line"> <span class="keyword">if</span>(fileType === <span class="string">&#x27;image/jpeg&#x27;</span> || fileType === <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.$message.error(<span class="string">&#x27;请插入图片类型文件(jpg/jpeg/png)&#x27;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">quillImgSuccess</span>(<span class="params">res, file</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// res为图片服务器返回的数据</span></span><br><span class="line">    <span class="comment">// 获取富文本组件实例</span></span><br><span class="line">    <span class="keyword">let</span> quill = <span class="built_in">this</span>.$refs.quillEditor.quill;</span><br><span class="line">    <span class="comment">// 如果上传成功</span></span><br><span class="line">    <span class="built_in">console</span>.log(res)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (res.errorCode == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 获取光标所在位置</span></span><br><span class="line">      <span class="keyword">let</span> length = quill.getSelection().index;</span><br><span class="line">      <span class="comment">// 插入图片  res.data为服务器返回的图片地址</span></span><br><span class="line">      quill.insertEmbed(length, <span class="string">&quot;image&quot;</span>, res.data);</span><br><span class="line">      <span class="comment">// 调整光标到最后</span></span><br><span class="line">      quill.setSelection(length + <span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.$message.error(<span class="string">&quot;图片插入失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 富文本图片上传失败</span></span><br><span class="line">  <span class="function"><span class="title">uploadError</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="comment">// loading动画消失</span></span><br><span class="line">    <span class="built_in">this</span>.$message.error(<span class="string">&quot;图片插入失败&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、前端思路"><a href="#3、前端思路" class="headerlink" title="3、前端思路"></a>3、前端思路</h2><p>首先了解到，toolbarOptions可以绑定富文本编辑器中的各个按钮事件，随后可以通过editorOption进行image按钮的点击覆盖，覆盖为quill-img input，也就是el-upload的input class，可以实现点击富文本图片插入被覆盖为upload上传功能。上传后端的接口是uploadImgUrl，该接口最终会返回一个图片路径，获取后再通过quillImgSuccess方法处理插入图片。handleEditorChange钩子函数可以获取富文本的html，最终将此html上传到服务器存数据库即可。</p><h1 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h1><h2 id="1、pom-xml引入依赖"><a href="#1、pom-xml引入依赖" class="headerlink" title="1、pom.xml引入依赖"></a>1、pom.xml引入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        阿里云OSS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、Java代码"><a href="#2、Java代码" class="headerlink" title="2、Java代码"></a>2、Java代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon.controller.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.OSSClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.ObjectMetadata;</span><br><span class="line"><span class="keyword">import</span> com.aliyun.oss.model.PutObjectResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传图片到OSS</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/tool/oss&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OSSServiceController</span> </span>&#123;</span><br><span class="line"><span class="comment">//    Log log = LogFactory.getLog(OSSClientUtil.class);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//阿里云OSS地址，这里看根据你的oss选择</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> String endpoint = <span class="string">&quot;your oss adress&quot;</span>;</span><br><span class="line">    <span class="comment">//阿里云OSS账号</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> String accessKeyId = <span class="string">&quot;your oss accessKeyId&quot;</span>;</span><br><span class="line">    <span class="comment">//阿里云OSS密钥</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> String accessKeySecret = <span class="string">&quot;your oss accessKeySecret&quot;</span>;</span><br><span class="line">    <span class="comment">//阿里云OSS上的存储块bucket名字</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> String bucketName = <span class="string">&quot;your bucketName&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//阿里云图片文件存储目录</span></span><br><span class="line">    <span class="keyword">private</span> String homeimagedir = <span class="string">&quot;article/img/&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> OSSClient ossClient;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">OSSServiceController</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ossClient = <span class="keyword">new</span> OSSClient(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ossClient = <span class="keyword">new</span> OSSClient(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 销毁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ossClient.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片 上传阿里云oss</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">uploadHomeImageOSS</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (file.getSize() &gt; <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;上传图片大小不能超过5M！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        String originalFilename = file.getOriginalFilename();</span><br><span class="line">        String substring = originalFilename.substring(originalFilename.lastIndexOf(<span class="string">&quot;.&quot;</span>)).toLowerCase();</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        String name = random.nextInt(<span class="number">10000</span>) + System.currentTimeMillis() + substring;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream inputStream = file.getInputStream();</span><br><span class="line">            <span class="keyword">this</span>.uploadHomeImageFileOSS(inputStream, name);</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;图片上传失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得图片路径</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileUrl</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getHomeImageUrl</span><span class="params">(String fileUrl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(fileUrl)) &#123;</span><br><span class="line">            String[] split = fileUrl.split(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.getUrl(<span class="keyword">this</span>.homeimagedir + split[split.length - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 图片上传到OSS服务器  如果同名文件会覆盖服务器上的</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> instream 文件流</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fileName 文件名称 包括后缀名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 出错返回&quot;&quot; ,唯一MD5数字签名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">uploadHomeImageFileOSS</span><span class="params">(InputStream instream, String fileName)</span> </span>&#123;</span><br><span class="line">        String ret = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//创建上传Object的Metadata</span></span><br><span class="line">            ObjectMetadata objectMetadata = <span class="keyword">new</span> ObjectMetadata();</span><br><span class="line">            objectMetadata.setContentLength(instream.available());</span><br><span class="line">            objectMetadata.setCacheControl(<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">            objectMetadata.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">            objectMetadata.setContentType(getcontentType(fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>))));</span><br><span class="line">            objectMetadata.setContentDisposition(<span class="string">&quot;inline;filename=&quot;</span> + fileName);</span><br><span class="line">            <span class="comment">//上传文件</span></span><br><span class="line">            PutObjectResult putResult = ossClient.putObject(bucketName, homeimagedir + fileName, instream, objectMetadata);</span><br><span class="line">            ret = putResult.getETag();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line"><span class="comment">//            log.error(e.getMessage(), e);</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (instream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    instream.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断OSS服务文件上传时文件的类型contentType</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> FilenameExtension 文件后缀</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getcontentType</span><span class="params">(String FilenameExtension)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.bmp&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/bmp&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.gif&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/gif&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.jpeg&quot;</span>) ||</span><br><span class="line">                FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.jpg&quot;</span>) ||</span><br><span class="line">                FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.png&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;image/jpeg&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.html&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;text/html&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.txt&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;text/plain&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.vsd&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;application/vnd.visio&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.pptx&quot;</span>) ||</span><br><span class="line">                FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.ppt&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;application/vnd.ms-powerpoint&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.docx&quot;</span>) ||</span><br><span class="line">                FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.doc&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;application/msword&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (FilenameExtension.equalsIgnoreCase(<span class="string">&quot;.xml&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;text/xml&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;image/jpg&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得url链接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUrl</span><span class="params">(String key)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 设置URL过期时间为10年  3600l* 1000*24*365*10</span></span><br><span class="line">        Date expiration = <span class="keyword">new</span> Date(<span class="keyword">new</span> Date().getTime() + <span class="number">3600l</span> * <span class="number">1000</span> * <span class="number">24</span> * <span class="number">365</span> * <span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 生成URL</span></span><br><span class="line">        URL url = ossClient.generatePresignedUrl(bucketName, key, expiration);</span><br><span class="line">        <span class="keyword">if</span> (url != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> url.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断图片</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">updateHomeImage</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        OSSServiceController ossClient = <span class="keyword">new</span> OSSServiceController();</span><br><span class="line">        <span class="keyword">if</span> (file == <span class="keyword">null</span> || file.getSize() &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;图片不能为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        String name = ossClient.uploadHomeImageOSS(file);</span><br><span class="line">        String imgUrl = ossClient.getHomeImageUrl(name);</span><br><span class="line">        <span class="keyword">return</span> imgUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理文件上传</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/homeImageUpload&quot;, method = RequestMethod.POST)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">homeImageUpload</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; value = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        value.put(<span class="string">&quot;success&quot;</span>, <span class="keyword">true</span>);</span><br><span class="line">        value.put(<span class="string">&quot;errorCode&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        value.put(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String head = updateHomeImage(file);<span class="comment">//此处是调用上传服务接口</span></span><br><span class="line">            value.put(<span class="string">&quot;data&quot;</span>, head);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            value.put(<span class="string">&quot;success&quot;</span>, <span class="keyword">false</span>);</span><br><span class="line">            value.put(<span class="string">&quot;errorCode&quot;</span>, <span class="number">200</span>);</span><br><span class="line">            value.put(<span class="string">&quot;errorMsg&quot;</span>, <span class="string">&quot;图片上传失败&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ok，以上文章为本人经验得出，若有不足，请多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;在开发博客项目时，vue前端需要使用到vue-quill-editor这个富文本编辑器，本文主要实现其中的关于富文本中插入的</summary>
      
    
    
    
    
    <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
    <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
    <category term="OSS" scheme="http://yoursite.com/tags/OSS/"/>
    
  </entry>
  
  <entry>
    <title>Vue+SpringBoot实现跨域请求</title>
    <link href="http://yoursite.com/2021/04/25/Vue-SpringBoot%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/"/>
    <id>http://yoursite.com/2021/04/25/Vue-SpringBoot%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</id>
    <published>2021-04-25T12:28:03.000Z</published>
    <updated>2021-04-25T12:52:32.606Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>最近在做毕业设计，当遇上本地接口调试时，遇上了跨域请求的问题。</p><h1 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h1><p>前端启动在localhost:8081，后端启动在localhost:8080，当初做微信小程序，前端并没有像Vue这样单独启动一个端口作为服务，所以在请求同一协议同在一台服务器下不同端口的时候便有了跨域访问的问题。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="SpringBoot添加CorsFilter"><a href="#SpringBoot添加CorsFilter" class="headerlink" title="SpringBoot添加CorsFilter"></a>SpringBoot添加CorsFilter</h2><p>CorsFilter是解决跨域问题的一个过滤器工具，在SpringBoot项目中可以加以配置，我自己是建立一个WebMvcConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry corsRegistry)</span></span>&#123;</span><br><span class="line">        corsRegistry.addMapping(<span class="string">&quot;/**&quot;</span>).allowedOrigins(<span class="string">&quot;http://localhost:8081&quot;</span>)</span><br><span class="line">                .allowedHeaders(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">30</span>*<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大概意思为允许所有接口对localhost:8081下的任意请求头任意方法进行跨域请求，最大有效时长为30s。如上配置完，加上@Configuration注解即可。</p><h2 id="Vue端axios"><a href="#Vue端axios" class="headerlink" title="Vue端axios"></a>Vue端axios</h2><p>在项目main.js配置如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span>;</span><br><span class="line">axios.defaults.baseURL=<span class="string">&#x27;http://localhost:8080&#x27;</span></span><br></pre></td></tr></table></figure><p>大功告成。</p><p>ok，以上文章为本人经验得出，若有不足，请多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;最近在做毕业设计，当遇上本地接口调试时，遇上了跨域请求的问题。&lt;/p&gt;
&lt;h1 id=&quot;问题复现&quot;&gt;&lt;a href=&quot;#问题</summary>
      
    
    
    
    
    <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
    <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
    <category term="axios" scheme="http://yoursite.com/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis逆向工程2-使用Maven插件实现</title>
    <link href="http://yoursite.com/2021/04/25/Mybatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B2-%E4%BD%BF%E7%94%A8Maven%E6%8F%92%E4%BB%B6%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2021/04/25/Mybatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B2-%E4%BD%BF%E7%94%A8Maven%E6%8F%92%E4%BB%B6%E5%AE%9E%E7%8E%B0/</id>
    <published>2021-04-25T09:29:25.000Z</published>
    <updated>2021-04-25T11:26:48.412Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>在之前分享了一篇关于使用Mybatis的generator工具逆向生成dao层、Mapper.java、Mapper.xml代码的文章，在之后学习中，我了解到了一种更为方便的逆向工程实现方式——通过配置Maven插件的形式实现。</p><p>使用generator.java以方法的形式实现，需要每一次都运行此方法，该方法不需要存放于项目中，也许大概出于结构整洁，每一次使用还要重新加入方法并运行，而使用插件，每次使用只需双击Maven插件项便可实现。</p><p>Talk less，show me the code（doge）</p><h2 id="1、操作首先引入tk-Mybatis，以下是所有相关依赖的引入"><a href="#1、操作首先引入tk-Mybatis，以下是所有相关依赖的引入" class="headerlink" title="1、操作首先引入tk.Mybatis，以下是所有相关依赖的引入"></a>1、操作首先引入tk.Mybatis，以下是所有相关依赖的引入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--整合Mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入tk.Mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、在plugins中添加以下节点，实现配置generator参数"><a href="#2、在plugins中添加以下节点，实现配置generator参数" class="headerlink" title="2、在plugins中添加以下节点，实现配置generator参数"></a>2、在plugins中添加以下节点，实现配置generator参数</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">              $&#123;basedir&#125;/src/main/resources/generatorConfig.xml</span><br><span class="line">          <span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span></span><br><span class="line">              true</span><br><span class="line">          <span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">verbose</span>&gt;</span></span><br><span class="line">              true</span><br><span class="line">          <span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>tk.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>configurationFile是generatorConfig.xml，既数据库连接、生成代码的存放路径等参数的配置，我放到了resource目录下。</p><h2 id="3、generatorConfig-xml"><a href="#3、generatorConfig-xml" class="headerlink" title="3、generatorConfig.xml"></a>3、generatorConfig.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span>  <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span>  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3Simple&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 去除自动生成的注释 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/horizon?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=Asia/Shanghai<span class="symbol">&amp;amp;</span>nullCatalogMeansCurrent=true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;your database username&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;your database password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:自动生成entity代码的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.markz.horizon.entity&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;./src/main/java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:自动生成XML代码的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;mapper&quot;</span>  <span class="attr">targetProject</span>=<span class="string">&quot;./src/main/resources&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:自动生成dao代码的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.markz.horizon.mapper&quot;</span>  <span class="attr">targetProject</span>=<span class="string">&quot;./src/main/java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tableName:用于自动生成代码的数据库表;domainObjectName:对应于数据库表的javaBean类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>  <span class="attr">tableName</span>=<span class="string">&quot;%&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>至此刷新Maven项目，找到plugin中的mybatis-generator，展开双击generate项，即可~</p><p>ok，以上文章为本人经验得出，若有不足，请多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;在之前分享了一篇关于使用Mybatis的generator工具逆向生成dao层、Mapper.java、Mapper.xml</summary>
      
    
    
    
    
    <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
    <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
    <category term="Mybatis-generator" scheme="http://yoursite.com/tags/Mybatis-generator/"/>
    
    <category term="MySql" scheme="http://yoursite.com/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序+SpringBoot实现用户微信登陆</title>
    <link href="http://yoursite.com/2020/07/28/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F+SpringBoot%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E5%BE%AE%E4%BF%A1%E7%99%BB%E9%99%86/"/>
    <id>http://yoursite.com/2020/07/28/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F+SpringBoot%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E5%BE%AE%E4%BF%A1%E7%99%BB%E9%99%86/</id>
    <published>2020-07-28T05:54:49.000Z</published>
    <updated>2021-04-24T08:24:03.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h1><p>该文章主要记录本人在入门微信小程序开发过程中遇上的一些问题和技术总结。</p><h1 id="期望效果"><a href="#期望效果" class="headerlink" title="期望效果"></a>期望效果</h1><p>希望通过微信官方提供的一系列API服务实现微信用户在个人项目的登录，并且获取到用户的公开信息，如头像链接、昵称和城市信息等，不必再多设计一套单独的登录注册系统，简化数据操作，并且也可以利用微信官方的安全性进行后续操作。</p><h1 id="代码思路"><a href="#代码思路" class="headerlink" title="代码思路"></a>代码思路</h1><p>在微信小程序向官方提出登录请求时候(wx.login())会向用户返回一个临时用来验证身份的code，有效期五分钟，期间内可以获取用户信息(wx.getUserInfo())，用户信息中包含了一个encryptedData（加密的用户信息），iv（AES解密向量），此时将code，encryptedData，iv上传到个人服务器，服务器根据用户传来的code，以及小程序的appId，小程序的secret码，可以向官方请求得到用户对应的session_key和openid，session_key是当前会话的唯一标识，有效期目前两个小时，openid是用户的唯一标识，得到这些信息后再对用户的encryptedData进行解密，最后返回用户信息给前端。</p><h1 id="小程序端代码"><a href="#小程序端代码" class="headerlink" title="小程序端代码"></a>小程序端代码</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">dealLogin: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//授权登录</span></span><br><span class="line">    wx.login(&#123;</span><br><span class="line">      success: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res)</span><br><span class="line">        wx.getUserInfo(&#123;</span><br><span class="line">          <span class="comment">//获取用户信息</span></span><br><span class="line">          lang: <span class="string">&#x27;zh_CN&#x27;</span>,</span><br><span class="line">          success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(result);</span><br><span class="line">            wx.request(&#123;</span><br><span class="line">                <span class="comment">//个人服务器地址</span></span><br><span class="line">              url: <span class="string">&#x27;http://localhost:8080/api/user/login&#x27;</span>,</span><br><span class="line">              method: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">              data: &#123;</span><br><span class="line">                encryptedData: result.encryptedData,</span><br><span class="line">                iv: result.iv,</span><br><span class="line">                code: res.code</span><br><span class="line">              &#125;,</span><br><span class="line">              success: <span class="function"><span class="keyword">function</span>(<span class="params">userInfo</span>) </span>&#123;</span><br><span class="line">                  <span class="comment">//返回的用户信息</span></span><br><span class="line">                <span class="built_in">console</span>.log(userInfo);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="Java后端"><a href="#Java后端" class="headerlink" title="Java后端"></a>Java后端</h1><h3 id="Controller-java"><a href="#Controller-java" class="headerlink" title="Controller.java"></a>Controller.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon.controller.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.entity.VO.LoginParams;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.entity.base.BaseResponse;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.entity.model.WeChatLoginModel;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.service.WeChatLoginService;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.service.impl.AccountServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.service.impl.WeChatLoginServiceImpl;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;api/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    WeChatLoginService weChatLoginService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;用户登录&quot;)</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BaseResponse <span class="title">login</span><span class="params">(<span class="meta">@RequestBody</span> <span class="meta">@Valid</span> WeChatLoginModel weChatLoginModel)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> weChatLoginService.loginService(weChatLoginModel);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其中的WeChatLoginModel"><a href="#其中的WeChatLoginModel" class="headerlink" title="其中的WeChatLoginModel"></a>其中的WeChatLoginModel</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon.entity.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.ToString;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotBlank;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.Size;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeChatLoginModel</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;encryptedData为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String encryptedData;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull(message = &quot;iv为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String iv;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank(message = &quot;code为空&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WeChatLoginService接口"><a href="#WeChatLoginService接口" class="headerlink" title="WeChatLoginService接口"></a>WeChatLoginService接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.entity.base.BaseResponse;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.entity.model.WeChatLoginModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">WeChatLoginService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="function">BaseResponse <span class="title">loginService</span><span class="params">(<span class="meta">@NotNull</span> WeChatLoginModel weChatLoginModel)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WeChatLoginServiceImpl实体业务（主要的逻辑都体现在此）"><a href="#WeChatLoginServiceImpl实体业务（主要的逻辑都体现在此）" class="headerlink" title="WeChatLoginServiceImpl实体业务（主要的逻辑都体现在此）"></a>WeChatLoginServiceImpl实体业务（主要的逻辑都体现在此）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.entity.base.BaseResponse;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.entity.model.WeChatLoginModel;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.service.WeChatLoginService;</span><br><span class="line"><span class="keyword">import</span> com.markz.horizon.utils.AesCbcUtil;</span><br><span class="line"><span class="keyword">import</span> okhttp3.*;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeChatLoginServiceImpl</span> <span class="keyword">implements</span> <span class="title">WeChatLoginService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String LOGINOK = <span class="string">&quot;LoginOK&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String LOGINFAILED = <span class="string">&quot;Loginfailed&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Integer LOGINOKSTATUS = <span class="number">777</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Integer LOGINFAILEDSTATUS = <span class="number">666</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@NotNull</span> <span class="function">BaseResponse <span class="title">loginService</span><span class="params">(<span class="meta">@NotNull</span> WeChatLoginModel weChatLoginModel)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//接收的数据参数</span></span><br><span class="line">        String url = <span class="string">&quot;https://api.weixin.qq.com/sns/jscode2session?appid=%s&amp;secret=%s&amp;js_code=%s&amp;grant_type=authorization_code&quot;</span>;</span><br><span class="line">        BaseResponse baseResponse = <span class="keyword">new</span> BaseResponse();</span><br><span class="line">        OkHttpClient okHttpClient = <span class="keyword">new</span> OkHttpClient();</span><br><span class="line">        Request request = <span class="keyword">new</span> Request.Builder()</span><br><span class="line">                .addHeader(<span class="string">&quot;content-type&quot;</span>, <span class="string">&quot;application/json&quot;</span>)</span><br><span class="line">                .url(String.format(url,<span class="string">&quot;wx70aa677b63bc9086&quot;</span>,<span class="string">&quot;02e8df450582d3ee6ffcf4fcc6ee7624&quot;</span>,weChatLoginModel.getCode()))</span><br><span class="line">                .build();</span><br><span class="line">        Call call = okHttpClient.newCall(request);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Response response = call.execute();</span><br><span class="line">            JSONObject jsonObject = <span class="keyword">new</span> JSONObject(response.body().string());</span><br><span class="line">            <span class="comment">//获取到openid和session_key</span></span><br><span class="line">            System.out.println(jsonObject);</span><br><span class="line">            <span class="comment">//AES解密用户数据</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                String result = AesCbcUtil.decrypt(weChatLoginModel.getEncryptedData(),jsonObject.getString(<span class="string">&quot;session_key&quot;</span>),weChatLoginModel.getIv(),<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (result != <span class="keyword">null</span> &amp;&amp; result.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    JSONObject userInfoJSON = <span class="keyword">new</span> JSONObject(result);</span><br><span class="line">                    System.out.println(userInfoJSON);</span><br><span class="line">                    Map&lt;String,Object&gt; userInfoMap = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">                    userInfoMap.put(<span class="string">&quot;nickName&quot;</span>, userInfoJSON.get(<span class="string">&quot;nickName&quot;</span>));</span><br><span class="line">                    userInfoMap.put(<span class="string">&quot;gender&quot;</span>, userInfoJSON.get(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">                    userInfoMap.put(<span class="string">&quot;city&quot;</span>, userInfoJSON.get(<span class="string">&quot;city&quot;</span>));</span><br><span class="line">                    userInfoMap.put(<span class="string">&quot;province&quot;</span>, userInfoJSON.get(<span class="string">&quot;province&quot;</span>));</span><br><span class="line">                    userInfoMap.put(<span class="string">&quot;country&quot;</span>, userInfoJSON.get(<span class="string">&quot;country&quot;</span>));</span><br><span class="line">                    userInfoMap.put(<span class="string">&quot;avatarUrl&quot;</span>, userInfoJSON.get(<span class="string">&quot;avatarUrl&quot;</span>));</span><br><span class="line">                    <span class="comment">// 解密unionId &amp; openId;</span></span><br><span class="line">                    userInfoMap.put(<span class="string">&quot;openId&quot;</span>, userInfoJSON.get(<span class="string">&quot;openId&quot;</span>));</span><br><span class="line">                    baseResponse.setData(userInfoMap);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    baseResponse.setData(<span class="string">&quot;用户信息解析失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            baseResponse.setMessage(LOGINOK);</span><br><span class="line">            baseResponse.setStatus(LOGINOKSTATUS);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            baseResponse.setMessage(LOGINFAILED);</span><br><span class="line">            baseResponse.setStatus(LOGINFAILEDSTATUS);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> baseResponse;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="AesCbcUtil工具类"><a href="#AesCbcUtil工具类" class="headerlink" title="AesCbcUtil工具类"></a>AesCbcUtil工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.binary.Base64;</span><br><span class="line"><span class="keyword">import</span> org.bouncycastle.jce.provider.BouncyCastleProvider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.crypto.BadPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.IllegalBlockSizeException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.NoSuchPaddingException;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.IvParameterSpec;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.*;</span><br><span class="line"><span class="keyword">import</span> java.security.spec.InvalidParameterSpecException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AesCbcUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//BouncyCastle是一个开源的加解密解决方案，主页在http://www.bouncycastle.org/</span></span><br><span class="line">        Security.addProvider(<span class="keyword">new</span> BouncyCastleProvider());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * AES解密</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data           //密文，被加密的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key            //秘钥</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> iv             //偏移量</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encodingFormat //解密后的结果需要进行的编码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(String data, String key, String iv, String encodingFormat)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        initialize();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//被加密的数据</span></span><br><span class="line">        <span class="keyword">byte</span>[] dataByte = Base64.decodeBase64(data);</span><br><span class="line">        <span class="comment">//加密秘钥</span></span><br><span class="line">        <span class="keyword">byte</span>[] keyByte = Base64.decodeBase64(key);</span><br><span class="line">        <span class="comment">//偏移量</span></span><br><span class="line">        <span class="keyword">byte</span>[] ivByte = Base64.decodeBase64(iv);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Cipher cipher = Cipher.getInstance(<span class="string">&quot;AES/CBC/PKCS7Padding&quot;</span>);</span><br><span class="line"></span><br><span class="line">            SecretKeySpec spec = <span class="keyword">new</span> SecretKeySpec(keyByte, <span class="string">&quot;AES&quot;</span>);</span><br><span class="line"></span><br><span class="line">            AlgorithmParameters parameters = AlgorithmParameters.getInstance(<span class="string">&quot;AES&quot;</span>);</span><br><span class="line">            parameters.init(<span class="keyword">new</span> IvParameterSpec(ivByte));</span><br><span class="line"></span><br><span class="line">            cipher.init(Cipher.DECRYPT_MODE, spec, parameters);<span class="comment">// 初始化</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] resultByte = cipher.doFinal(dataByte);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">null</span> != resultByte &amp;&amp; resultByte.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                String result = <span class="keyword">new</span> String(resultByte, encodingFormat);</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidParameterSpecException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidAlgorithmParameterException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ok，以上文章为本人经验得出，若有不足，请多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前情提要&quot;&gt;&lt;a href=&quot;#前情提要&quot; class=&quot;headerlink&quot; title=&quot;前情提要&quot;&gt;&lt;/a&gt;前情提要&lt;/h1&gt;&lt;p&gt;该文章主要记录本人在入门微信小程序开发过程中遇上的一些问题和技术总结。&lt;/p&gt;
&lt;h1 id=&quot;期望效果&quot;&gt;&lt;a href=</summary>
      
    
    
    
    
    <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
    <category term="微信小程序" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot搭建Mybatis及逆向工程</title>
    <link href="http://yoursite.com/2020/07/23/SpringBoot%E6%90%AD%E5%BB%BAMybatis%E5%8F%8A%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"/>
    <id>http://yoursite.com/2020/07/23/SpringBoot%E6%90%AD%E5%BB%BAMybatis%E5%8F%8A%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/</id>
    <published>2020-07-23T05:54:49.000Z</published>
    <updated>2021-04-24T08:02:49.554Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于SpringBoot搭建Mybatis及逆向工程的初步上手体验经验总结"><a href="#关于SpringBoot搭建Mybatis及逆向工程的初步上手体验经验总结" class="headerlink" title="关于SpringBoot搭建Mybatis及逆向工程的初步上手体验经验总结"></a>关于SpringBoot搭建Mybatis及逆向工程的初步上手体验经验总结</h1><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a>1.原理</h2><p>首先提提心得，在一周的SpringBoot和Mybatis的学习过程中，了解到了Mybatis在对数据库的操作与以往的手动配置jdbc和手写数据库驱动过程的区别，框架的使用，程序员需要更加注重的是的业务，而不是代码本身，简化了程序的开发效率，框架也降低了代码的冗余程度。</p><h3 id="1-Mybatis的工作原理："><a href="#1-Mybatis的工作原理：" class="headerlink" title="(1)Mybatis的工作原理："></a>(1)Mybatis的工作原理：</h3><p>Mybatis首先在配置好以后，通过对应的Mapper.xml文件进行sql语句的配置，再通过接口Mapper调用sql语句。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select account, nickname, password, status, sign</span><br><span class="line">  from user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例如select语句，查询所有的user表信息，直接通过userMapper.selectAll()调用，返回一个对应的User类型的值。</p><h3 id="2-逆向生成原理"><a href="#2-逆向生成原理" class="headerlink" title="(2)逆向生成原理"></a>(2)逆向生成原理</h3><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h2><h3 id="1-引入依赖到pom-xml"><a href="#1-引入依赖到pom-xml" class="headerlink" title="(1)引入依赖到pom.xml"></a>(1)引入依赖到pom.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-application-yml配置"><a href="#2-application-yml配置" class="headerlink" title="(2)application.yml配置"></a>(2)application.yml配置</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8080</span></span><br><span class="line"></span><br><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    username: root</span><br><span class="line">    password: <span class="number">123456</span></span><br><span class="line">    url: jdbc:mysql://localhost:3306/horizon?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">    driver-<span class="class"><span class="keyword">class</span>-<span class="title">name</span>:</span> com.mysql.cj.jdbc.Driver</span><br><span class="line"></span><br><span class="line">    job-store-<span class="built_in">type</span>: jdbc</span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath:/mapper/*.xml</span><br><span class="line">  <span class="built_in">type</span>-aliases-package: com.markz.horizon.entity</span><br></pre></td></tr></table></figure><p>由于使用的是比较新的版本的Mysql，驱动类使用的是com.mysql.cj.jdbc.Driver而不是com.mysql.jdbc.Driver。</p><h3 id="3-generatorConfig-xml"><a href="#3-generatorConfig-xml" class="headerlink" title="(3)generatorConfig.xml"></a>(3)generatorConfig.xml</h3><p>该文件创建到resources目录下，内容如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">generatorConfiguration</span>  <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span>  <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3Simple&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 去除自动生成的注释 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/horizon?useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>nullCatalogMeansCurrent=true&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:自动生成entity代码的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.markz.horizon.entity&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;./src/main/java&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:自动生成XML代码的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;mapper&quot;</span>  <span class="attr">targetProject</span>=<span class="string">&quot;./src/main/resources&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- targetProject:自动生成dao代码的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> <span class="attr">targetPackage</span>=<span class="string">&quot;com.markz.horizon.mapper&quot;</span>  <span class="attr">targetProject</span>=<span class="string">&quot;./src/main/java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- tableName:用于自动生成代码的数据库表;domainObjectName:对应于数据库表的javaBean类名--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span>  <span class="attr">tableName</span>=<span class="string">&quot;user&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;User&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-generatorConfig-xml的运行"><a href="#4-generatorConfig-xml的运行" class="headerlink" title="(4)generatorConfig.xml的运行"></a>(4)generatorConfig.xml的运行</h3><p>我自己本人采用的是利用代码来实现生成，创建一个generatorMain.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.markz.horizon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.InvalidConfigurationException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.exception.XMLParserException;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GeneratorMain</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; warnings = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">boolean</span> overwrite = <span class="keyword">true</span>;</span><br><span class="line">        String genCig = <span class="string">&quot;/generatorConfig.xml&quot;</span>;</span><br><span class="line">        File configFile = <span class="keyword">new</span> File(GeneratorMain.class.getResource(genCig).getFile());</span><br><span class="line">        ConfigurationParser configurationParser = <span class="keyword">new</span> ConfigurationParser(warnings);</span><br><span class="line">        Configuration configuration = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            configuration = configurationParser.parseConfiguration(configFile);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (XMLParserException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        DefaultShellCallback callback = <span class="keyword">new</span> DefaultShellCallback(overwrite);</span><br><span class="line">        MyBatisGenerator myBatisGenerator = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            myBatisGenerator = <span class="keyword">new</span> MyBatisGenerator(configuration,callback,warnings);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidConfigurationException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            myBatisGenerator.generate(<span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码如上，路径在Application的同级目录。<br>不用在意实现逻辑，直接照搬的。</p><p>运行该函数，就会自动创建entity包，里面有对应的表的实体类，还有mapper包，里面对应有Mapper接口，还有resources目录下的mapper包，里面对应有Mapper.xml。</p><p>运行生成以后，generatorConfig.xml和该运行程序都可以暂时不管，可以移除工程项目，多次运行会造成多次生成，若表结构发生变化，只需将生成的文件删除，重新执行上述步骤即可。</p><p>table标签里面指定要生成的表，若全部生成，将user改成%。在jdbc的配置标签里面需要加上nullCatalogMeansCurrent=true该属性配置，之前因为没有加，连mysql库里的user也生成了，加上以后可以限制在目前我使用的horizon库里。</p><p>逆向生成代码，是指在做好一系列配置以后，利用一个叫做generatorConfig.xml的文件，通过代码生成所需的实体类entity，Mapper接口，Mapper.xml，并且生成简单的数据库操作sql语句到xml文件中，接下来就进入正题。</p><p>ok，以上文章为本人经验得出，若有不足，请多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于SpringBoot搭建Mybatis及逆向工程的初步上手体验经验总结&quot;&gt;&lt;a href=&quot;#关于SpringBoot搭建Mybatis及逆向工程的初步上手体验经验总结&quot; class=&quot;headerlink&quot; title=&quot;关于SpringBoot搭建Myba</summary>
      
    
    
    
    
    <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
    <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
    <category term="Mybatis-Generator" scheme="http://yoursite.com/tags/Mybatis-Generator/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序与SpringBoot后端交互例子</title>
    <link href="http://yoursite.com/2020/06/27/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8ESpringBoot%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E4%BE%8B%E5%AD%90/"/>
    <id>http://yoursite.com/2020/06/27/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8ESpringBoot%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92%E4%BE%8B%E5%AD%90/</id>
    <published>2020-06-27T05:54:49.000Z</published>
    <updated>2021-04-24T07:50:55.512Z</updated>
    
    <content type="html"><![CDATA[<p>程序设计的效果为，当前端向后端传输数据以后，后端接受数据，返回前端新的信息，前端接受数据后更改原先数据，动态渲染UI。</p><h1 id="微信小程序（前端）"><a href="#微信小程序（前端）" class="headerlink" title="微信小程序（前端）"></a>微信小程序（前端）</h1><h2 id="1、wxml"><a href="#1、wxml" class="headerlink" title="1、wxml"></a>1、wxml</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;locationChoose&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;send&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;fa&quot;</span>&gt;</span>发<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;sendAddress&quot;</span>&gt;</span>&#123;&#123;sendAdd&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;normal&quot;</span>&gt;</span>常用1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;receive&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;shou&quot;</span>&gt;</span>收<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;reveiveAddress&quot;</span>&gt;</span>&#123;&#123;rcvAdd&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;normal&quot;</span>&gt;</span>常用2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;submmit&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;buttonTest&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、JavaScript代码"><a href="#2、JavaScript代码" class="headerlink" title="2、JavaScript代码"></a>2、JavaScript代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">  sendAdd: <span class="string">&quot;当前&quot;</span>,</span><br><span class="line">  rcvAdd: <span class="string">&quot;要送到哪里&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>sendAdd 和 rcvAdd 和wxml中的数据绑定。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">buttonTest:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> that = <span class="built_in">this</span>;</span><br><span class="line">  wx.request(&#123;</span><br><span class="line">    url: <span class="string">&#x27;http://localhost:8080/test&#x27;</span>,</span><br><span class="line">    method:<span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">      sendAdd:<span class="built_in">this</span>.data.sendAdd,</span><br><span class="line">      receiveAdd:<span class="built_in">this</span>.data.rcvAdd</span><br><span class="line">    &#125;,</span><br><span class="line">    header:&#123;</span><br><span class="line">      <span class="string">&#x27;content-type&#x27;</span>:<span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res.data)</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        sendAdd:res.data.sendAdd,</span><br><span class="line">        rcvAdd:res.data.receiveAdd</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    fail:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;fail!!!!!!!!!!!!&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体思想为，设置接口地址，设置传入的数据，设置请求头为json，接下来的是请求成功和请求失败的处理函数，请求成功则将数据替换，失败则console输出结果。</p><h1 id="Java代码（后端）"><a href="#Java代码（后端）" class="headerlink" title="Java代码（后端）"></a>Java代码（后端）</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/test&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">buttonTest</span><span class="params">(String sendAdd, String receiveAdd, HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="string">&quot;GET,POST&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;sendAdd=&quot;</span>+sendAdd+<span class="string">&quot;   receiveAdd=&quot;</span>+receiveAdd);</span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; map = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;sendAdd&quot;</span>,<span class="string">&quot;确认发送地址&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;receiveAdd&quot;</span>,<span class="string">&quot;确认收货地址&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体思想是在入口函数约定接口路径，加上注解，在函数中定义返回的数据编码为utf-8，还有跨域请求等设置，打印出前端传入的数据，输出，再将数据装入一个HashMap类的map对象，将数据对应装入map后返回给前端。</p><p>ok，以上文章为本人经验得出，若有不足，请多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;程序设计的效果为，当前端向后端传输数据以后，后端接受数据，返回前端新的信息，前端接受数据后更改原先数据，动态渲染UI。&lt;/p&gt;
&lt;h1 id=&quot;微信小程序（前端）&quot;&gt;&lt;a href=&quot;#微信小程序（前端）&quot; class=&quot;headerlink&quot; title=&quot;微信小程序（前</summary>
      
    
    
    
    
    <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
    <category term="微信小程序" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="前后端分离" scheme="http://yoursite.com/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>浅谈Java连接云服务器Oracle</title>
    <link href="http://yoursite.com/2019/12/16/%E6%B5%85%E8%B0%88Java%E8%BF%9E%E6%8E%A5%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8Oracle/"/>
    <id>http://yoursite.com/2019/12/16/%E6%B5%85%E8%B0%88Java%E8%BF%9E%E6%8E%A5%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8Oracle/</id>
    <published>2019-12-16T15:55:43.000Z</published>
    <updated>2019-12-16T16:20:36.504Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、在云端服务器安装Oracle服务端"><a href="#1、在云端服务器安装Oracle服务端" class="headerlink" title="1、在云端服务器安装Oracle服务端"></a>1、在云端服务器安装Oracle服务端</h2><p><a href="https://pan.baidu.com/s/1-QyAyyNGLaDpYfc3axDCEg">Oracle 11g下载</a></p><p>提取码：7qbi</p><h3 id="Oracle-11g的安装的教程"><a href="#Oracle-11g的安装的教程" class="headerlink" title="Oracle 11g的安装的教程"></a>Oracle 11g的安装的教程</h3><p>可能大家熟悉的Oracle安装是官方提供的两个压缩包形式的，需要解压在同一个目录下的形式，而我目前提供的这个Oracle 11g数据库直接下载、解压就可以开始安装。</p><p><img src="https://imgchr.com/i/Q5IVoV" alt="点击setup开始安装"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1、在云端服务器安装Oracle服务端&quot;&gt;&lt;a href=&quot;#1、在云端服务器安装Oracle服务端&quot; class=&quot;headerlink&quot; title=&quot;1、在云端服务器安装Oracle服务端&quot;&gt;&lt;/a&gt;1、在云端服务器安装Oracle服务端&lt;/h2&gt;&lt;p&gt;&lt;a</summary>
      
    
    
    
    
    <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
    <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
    <category term="Windows Server" scheme="http://yoursite.com/tags/Windows-Server/"/>
    
  </entry>
  
  <entry>
    <title>Qt文件重命名：QFile::rename()使用经验分享</title>
    <link href="http://yoursite.com/2019/11/13/Qt%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D%EF%BC%9AQFile-rename-%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    <id>http://yoursite.com/2019/11/13/Qt%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D%EF%BC%9AQFile-rename-%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/</id>
    <published>2019-11-13T02:38:39.000Z</published>
    <updated>2019-12-03T07:10:47.421Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QFile"><a href="#QFile" class="headerlink" title="QFile"></a>QFile</h1><p>  QFile 是Qt为程序员操作文件封装的一个文件操作类，包含许多文件操作的命令。</p><p>  这篇文章主要先针对QFile::rename()函数做一个使用心得分享，后期会对其他文件操作函数选择性的进行讲解。</p><h1 id="自己踩入的-QFile-rename-的坑"><a href="#自己踩入的-QFile-rename-的坑" class="headerlink" title="自己踩入的 QFile::rename() 的坑"></a>自己踩入的 QFile::rename() 的坑</h1><p>  在最初，看了Qt的帮助文档，里面的函数有两种重载形式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">QFile::rename</span><span class="params">(<span class="keyword">const</span> QString &amp;newName)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">QFile::rename</span><span class="params">(<span class="keyword">const</span> QString &amp;oldName, <span class="keyword">const</span> QString &amp;newName)</span></span></span><br></pre></td></tr></table></figure><p>第一个函数与第二个函数其实大同小异，第一个参数直接设定为文件新名即可，第二个函数则为文件旧名与文件新名，理解起来可以说是非常简单，可是在实际操作中，却需要注意很多关键点。</p><h3 id="问题所在"><a href="#问题所在" class="headerlink" title="问题所在"></a>问题所在</h3><p>这里的文件名不止单纯的是文件名，如 test.txt。如果使用这样的形式的文件名，是可以实现文件名修改的，但是修改的同时文件也会默认存储与项目的当前工作路径下，在特定情况下使用是可以的，但是本人在具体使用情况中，需要打开其他位置的文件，并且重命名它，并不需要修改路径，此时的文件名一定要为绝对路径。</p><p>不采用绝对路径可能造成文件存储位置改变，并且下文的文件名构成是重点，否则文件路径及类型出了问题将会造成巨大的麻烦（文件类型错误，文件路径改变）。</p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><p>我在此就以我的实际情况进行说明吧，我需要打开一个文件，重新命名，然后发送给其他用户，在这里就从文件打开操作到重命名这个阶段进行讲解。</p><h4 id="1-打开文件"><a href="#1-打开文件" class="headerlink" title="1 打开文件"></a>1 打开文件</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QString filepath = QFileDialog::<span class="built_in">getOpenFileName</span>(<span class="keyword">this</span>,<span class="string">&quot;open&quot;</span>,<span class="string">&quot;../&quot;</span>);</span><br></pre></td></tr></table></figure><p>DFileDialog可以实现打开文件选择框，选中文件之后 QFileDialog::getOpenFileName()函数可以返回文件路径。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">QFileInfo <span class="title">info</span><span class="params">(filepath)</span></span>;</span><br></pre></td></tr></table></figure><p>QFileInfo 可以获取文件的信息，如大小，文件名等。可以使用 qDebug() 查看返回值，这里的文件名就是单纯的文件名加文件格式（test.txt）。</p><h4 id="2-获取文件名"><a href="#2-获取文件名" class="headerlink" title="2 获取文件名"></a>2 获取文件名</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QString oldName = file.<span class="built_in">fileName</span>();</span><br></pre></td></tr></table></figure><p>这里需要注意，QFile::fileName() 返回的是带绝对路径的文件名。我打开了一个图片文件，返回的是</p><p>F:/test/2.jpg</p><h4 id="3-获取文件绝对路径"><a href="#3-获取文件绝对路径" class="headerlink" title="3 获取文件绝对路径"></a>3 获取文件绝对路径</h4><p>可以看到，获取到的是目录索引结果，分隔符是“/”，然而，我们还需要进行转换，转换为</p><p>F:\test\2.jpg</p><p>转换的步骤下文有提及。</p><p>之后我们需要获取当前工作的路径，使用下面的函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QString absolutpath = info.<span class="built_in">absolutePath</span>();</span><br></pre></td></tr></table></figure><p>使用此函数就可以获取到 F:/test</p><h4 id="4-文件重命名"><a href="#4-文件重命名" class="headerlink" title="4 文件重命名"></a>4 文件重命名</h4><p>重命名有一个问题就是，手动修改文件名是可以的，但是要是实现动态的修改，得先获取文件的类型，就需要把文件类型提取出来。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QString type = file.<span class="built_in">fileName</span>().<span class="built_in">section</span>(<span class="string">&quot;.&quot;</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>这里用的是QString::section() 函数，具体使用可见帮助文档，获取”.”之后的字符串，也就是文件类型。</p><p>然后呢，就是拼接新的文件名</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QString newName = QDir::<span class="built_in">toNativeSeparators</span>(<span class="built_in">QString</span>(absolutpath+<span class="string">&quot;/new.&quot;</span>+type));</span><br></pre></td></tr></table></figure><p>就可以构成下方的新文件名</p><p>F:\test\new.jpg</p><p>同理，处理旧文件名</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QString oldName = QDir::<span class="built_in">toNativeSeparators</span>(file.<span class="built_in">fileName</span>());</span><br></pre></td></tr></table></figure><p>F:\test\2.jpg</p><p>返回值也是一样的格式</p><p>然后调用rename函数就行了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">qDebug</span>()&lt;&lt;file.<span class="built_in">rename</span>(oldName,newName);</span><br></pre></td></tr></table></figure><p>基本上就算是完成修改文件名了，若是false结果，记得检查文件路径是否正确，还确保文件名没有重复。</p><p>个人一点点摸索出来的，可以说是集成了百度经验，QtCN,CSDN的意见，若是有问题可以私聊，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;QFile&quot;&gt;&lt;a href=&quot;#QFile&quot; class=&quot;headerlink&quot; title=&quot;QFile&quot;&gt;&lt;/a&gt;QFile&lt;/h1&gt;&lt;p&gt;  QFile 是Qt为程序员操作文件封装的一个文件操作类，包含许多文件操作的命令。&lt;/p&gt;
&lt;p&gt;  这篇文章主要</summary>
      
    
    
    
    
    <category term="Qt" scheme="http://yoursite.com/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>Oracle设置主键字段自增</title>
    <link href="http://yoursite.com/2019/10/24/Oracle%E8%AE%BE%E7%BD%AE%E4%B8%BB%E9%94%AE%E5%AD%97%E6%AE%B5%E8%87%AA%E5%A2%9E/"/>
    <id>http://yoursite.com/2019/10/24/Oracle%E8%AE%BE%E7%BD%AE%E4%B8%BB%E9%94%AE%E5%AD%97%E6%AE%B5%E8%87%AA%E5%A2%9E/</id>
    <published>2019-10-24T05:54:49.000Z</published>
    <updated>2019-12-03T07:09:19.750Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于Oracle数据库设置字段自增经验分享"><a href="#关于Oracle数据库设置字段自增经验分享" class="headerlink" title="关于Oracle数据库设置字段自增经验分享"></a>关于Oracle数据库设置字段自增经验分享</h1><h2 id="一、浅谈-Oracle-与-MySQL-的设置字段自增的区别"><a href="#一、浅谈-Oracle-与-MySQL-的设置字段自增的区别" class="headerlink" title="一、浅谈 Oracle 与 MySQL 的设置字段自增的区别"></a>一、浅谈 Oracle 与 MySQL 的设置字段自增的区别</h2><p>使用过MySQL的朋友们应该知道，在设置表中的字段属性时，加入auto_increment可以实现</p><p>字段的自增，然而在Oracle建表中加入此属性，却无法实现字段自增，此时，我们需要加入Oracle</p><p>的触发器来实现字段自增。</p><h2 id="二、实例"><a href="#二、实例" class="headerlink" title="二、实例"></a>二、实例</h2><p>直接上例子：</p><p>首先，创建我的学生表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> STUDENT(</span><br><span class="line">  SNO NUMBER(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  SNAME <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  SCORE NUMBER(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>建立了一个学生表（学号，姓名,成绩）</p><p>此时需要给SNO加自增属性，则先创建一个序列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> SEQUENCE STU_SEQ <span class="comment">--格式CREATE SEQUENCE 序列名</span></span><br><span class="line">INCREMENT <span class="keyword">BY</span> <span class="number">1</span>  <span class="comment">--设置每次自增1</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">WITH</span> <span class="number">1</span>  <span class="comment">--初始从1开始</span></span><br><span class="line">MAXVALUE <span class="number">9999</span>  <span class="comment">--最大值为9999，若不设置可用NOMAXVALUE</span></span><br><span class="line">NOCYCLE  <span class="comment">--设置不循环</span></span><br><span class="line">NOCACHE;  <span class="comment">--无缓存</span></span><br></pre></td></tr></table></figure><p>运行以上命令后，提示“序列已创建”</p><p>继续上面的操作，创建触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">TRIGGER</span> STU_SNO_AUTOINCREMENT  <span class="comment">--CREATE OR REPLACE 触发器名</span></span><br><span class="line">BEFORE</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">ON</span> STUDENT  <span class="comment">--INSERT ON 表名</span></span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="type">ROW</span>  <span class="comment">--对每一行有效</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">SELECT</span> STU_SEQ.NEXTVAL <span class="keyword">INTO</span>:NEW.SNO <span class="keyword">FROM</span> DUAL;  #<span class="keyword">SELECT</span> 序列名.NEXTVAL <span class="keyword">INTO</span>:NEW.主键字段名 <span class="keyword">FROM</span> DUAL</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="operator">/</span>  <span class="comment">--不要忘记这个斜杠</span></span><br></pre></td></tr></table></figure><p>若成功，便会提示 “触发器已创建”。</p><p>好了，现在大功告成，插入几条信息，就可以看见字段自增的效果了。</p><p>对应字段插入语句如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> STUDENT(SNAME,SCORE) <span class="keyword">VALUE</span>(<span class="string">&#x27;Mark张&#x27;</span>,<span class="number">99</span>);</span><br></pre></td></tr></table></figure><p>ok，以上文章为本人经验得出，若有不足，请多指出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于Oracle数据库设置字段自增经验分享&quot;&gt;&lt;a href=&quot;#关于Oracle数据库设置字段自增经验分享&quot; class=&quot;headerlink&quot; title=&quot;关于Oracle数据库设置字段自增经验分享&quot;&gt;&lt;/a&gt;关于Oracle数据库设置字段自增经验分享&lt;/</summary>
      
    
    
    
    
    <category term="Oracle" scheme="http://yoursite.com/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目入门</title>
    <link href="http://yoursite.com/2019/10/16/Vue%E9%A1%B9%E7%9B%AE%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2019/10/16/Vue%E9%A1%B9%E7%9B%AE%E5%85%A5%E9%97%A8/</id>
    <published>2019-10-16T09:51:37.000Z</published>
    <updated>2019-10-28T05:58:32.030Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js的安装"><a href="#Node-js的安装" class="headerlink" title="Node.js的安装"></a>Node.js的安装</h1><h2 id="1-下载Node-js"><a href="#1-下载Node-js" class="headerlink" title="1 下载Node.js"></a>1 下载Node.js</h2><p><a href="https://nodejs.org/en/download/">下载网址</a></p><p>自己下载的Windows64位的，各位根据自己的需求下载就好啦。</p><h2 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2 安装Node.js"></a>2 安装Node.js</h2><p>Node.js的安装呢，自己鼓捣一下，傻瓜式安装，一路next下去，选取安装位置就行，我自己装到了D盘里，重点放在后文。</p><h2 id="cnpm安装"><a href="#cnpm安装" class="headerlink" title="cnpm安装"></a>cnpm安装</h2><p>npm是Node.js的包管理器，在后期开发中下载各种组件</p><p>cnpm是npm的中国国内镜像版</p><p>Node.js是自带npm的，但是由于访问外网比较慢，所以我自己是推荐安装cnpm的。</p><p>打开cmd，运行下面语句，安装cnpm。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h1 id="Vue脚手架搭建"><a href="#Vue脚手架搭建" class="headerlink" title="Vue脚手架搭建"></a>Vue脚手架搭建</h1><h2 id="1-安装vue-cli"><a href="#1-安装vue-cli" class="headerlink" title="1 安装vue-cli"></a>1 安装vue-cli</h2><p>这一步实现vue脚手架的搭建</p><p>在cmd中输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g vue-cli</span><br><span class="line"><span class="comment"># npm install -g vue-cli也是可以的</span></span><br></pre></td></tr></table></figure><p>-g为全局安装，也可以输入全拼</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -global vue-cli</span><br></pre></td></tr></table></figure><p>OK，实现脚手架安装可以开始项目创建了，在cmd输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack myVue</span><br><span class="line"><span class="comment"># myVue是你的项目名</span></span><br></pre></td></tr></table></figure><p>经过漫长的等待（其实也不漫长，可以喝一口水），会出现一大堆对话选项，大概之前会让你确认<br>你的项目名以及作者信息等；之后的一些操作可以参考下面的操作：</p><p>Vue build 为打包方式，回车确定；</p><p>Install vue-router 是否要安装vue路由 vue-router，路由可以实现组件跳转，未来会有用<br>  所以yes(y) 回车；</p><p>Use ESLint to lint your code 是否需要 js 语法检测，自己目前不需要 所以 no(n) 回车；</p><p>Set up unit tests 是否安装 单元测试工具 目前不需要，n 回车；</p><p>Setup e2e tests with Nightwatch 是否需要 端到端测试工具 不需要，n 回车；</p><p>命令执行完成就能看到当前目录出现项目对应的文件夹，下一步需要安装vue项目依赖，依赖比较大<br>会稍微慢一些，cd到项目文件夹中，例如我cd myVue，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm i</span><br><span class="line"><span class="comment"># 全拼cnpm install，效果一样</span></span><br></pre></td></tr></table></figure><p>运行完成查看文件夹中是否拥有node_modules文件夹</p><p>万事俱备，运行一波，在当前目录下输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>等待端口成功打开以后可以看到最后一行输出为你目前的端口号，默认是8080端口，</p><p>在浏览器中访问</p><pre><code>localhost:8080</code></pre><p>就可以看到vue的页面，此时的项目就算是搭建成功了。</p><p>PS：若端口被其他进程占用，可以到/config/index.js中修改port，保存后即可使用其他端口号。</p><p>以上为自己经验总结得出，有不足可提出，虚心接受~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Node-js的安装&quot;&gt;&lt;a href=&quot;#Node-js的安装&quot; class=&quot;headerlink&quot; title=&quot;Node.js的安装&quot;&gt;&lt;/a&gt;Node.js的安装&lt;/h1&gt;&lt;h2 id=&quot;1-下载Node-js&quot;&gt;&lt;a href=&quot;#1-下载Node-j</summary>
      
    
    
    
    
    <category term="Vue" scheme="http://yoursite.com/tags/Vue/"/>
    
    <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
  </entry>
  
</feed>
